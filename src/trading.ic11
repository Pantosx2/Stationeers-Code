const light = 797794350;

const led = -815193061;
const tradeLed = "Trade Led";

const dish = 439026183;

const computer = -626563514;
const tradeComputer = "Trade Computer";

const base = -2066405918;

const vending = -443130773;
const tradeVending = "Trade Vend";

const switch = 321604921;
const tradeSwitch = "Trade Switch";

const maxWait = 30;

const maxWatts = 7000;

void control()
{
    while(true)
    {
        yield;
        var on = DevicesOfType(switch).WithName(tradeSwitch).Setting.Maximum;
        DevicesOfType(dish).On = on;
        DevicesOfType(computer).WithName(tradeComputer).On = on;
        DevicesOfType(base).On = on;
        DevicesOfType(vending).WithName(tradeVending).On = on;
        DevicesOfType(led).WithName(tradeLed).On = on;
        DevicesOfType(light).On = on;
        if(on == 1)
        {
            return;
        }
    }
}

void addHorizontal(h)
{
    DevicesOfType(dish).Horizontal = DevicesOfType(dish).Horizontal.Maximum + h;
    while(DevicesOfType(dish).Idle.Maximum == 0)
    {
        yield;
    }
}

void addVertical(v)
{
    DevicesOfType(dish).Vertical = DevicesOfType(dish).Vertical.Maximum + v;
    while(DevicesOfType(dish).Idle.Maximum == 0)
    {
        yield;
    }
}

real getSignalStrength()
{
    var waitTime = 0;

    while(DevicesOfType(dish).SignalStrength.Maximum == -1 & waitTime < maxWait)
    {
        waitTime = waitTime + 1;
        sleep(1);
    }

    return DevicesOfType(dish).SignalStrength.Maximum;
}

void Main()
{
    var exit = 0;
    var change = 10;

    var strongestSignal = 0;
    var distance = 0;
    var distanceOld = 0;

    DevicesOfType(led).WithName(tradeLed).Setting = 0;
    while(true)
    {
        yield;
        control(); 

        // Get the strongest signal
        strongestSignal = DevicesOfType(dish).SignalID.Maximum;

        // If the strongest signal has been traded with move the dish far away to find a new signal
        if(DevicesOfType(dish).InterrogationProgress.Maximum == 1)
        {
            DevicesOfType(led).WithName(tradeLed).Setting = 1;
            change = 90;
            addHorizontal(change);
            continue;
        }

        change = 20;

        distance = getSignalStrength(); 
        
        exit = 0;
        // If the signal is not strong enough to trade
        // Move the dish in the direction of the signal
        while(DevicesOfType(dish).WattsReachingContact.Maximum <= DevicesOfType(dish).MinimumWattsToContact.Maximum & !exit)
        {
            DevicesOfType(led).WithName(tradeLed).Setting = 2;

            control();
            
            addHorizontal(change);

            distanceOld = distance;
            distance = getSignalStrength(); 

            if(DevicesOfType(dish).MinimumWattsToContact.Maximum > maxWatts | distance == -1)
            {
                exit = 1;
            }
            if(distance > distanceOld)
            {
                change = -1 * (change / 2);
            }
        }
        // Signal is strong enough to trade
        if(exit == 0)
        {
            DevicesOfType(led).WithName(tradeLed).Setting = 3;

            DevicesOfType(dish).Activate = 0;
            while(DevicesOfType(dish).InterrogationProgress.Maximum != 1)
            {
                DevicesOfType(dish).Activate = 1;
            }
            DevicesOfType(dish).Activate = 0;
        }
    }
}